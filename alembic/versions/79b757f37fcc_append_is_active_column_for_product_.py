"""Append 'is_active' column for Product model

Revision ID: 79b757f37fcc
Revises: b56b159b0096
Create Date: 2025-06-01 08:24:50.322123

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = '79b757f37fcc'
down_revision: Union[str, None] = 'b56b159b0096'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('products', sa.Column('is_active', sa.BOOLEAN(), nullable=True))
    op.alter_column('products', 'category_title',
                    existing_type=sa.VARCHAR(length=35),
                    type_=sa.VARCHAR(length=15),
                    existing_nullable=False)
    op.create_unique_constraint(None, 'users', ['email'])
    op.create_unique_constraint(None, 'users', ['login'])
    op.create_unique_constraint(None, 'users', ['wishlist_id'])
    op.create_unique_constraint(None, 'users', ['phone_number'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint(None, 'users', type_='unique')
    op.alter_column('products', 'category_title',
                    existing_type=sa.VARCHAR(length=15),
                    type_=sa.VARCHAR(length=35),
                    existing_nullable=False)
    op.drop_column('products', 'is_active')
    # ### end Alembic commands ###
